-- Creación del esquema
CREATE SCHEMA IF NOT EXISTS products;

-- Creación de la tabla
CREATE TABLE IF NOT EXISTS products.products (
id SERIAL,
product_id VARCHAR(70) PRIMARY KEY,
name VARCHAR(150),
category VARCHAR(150),
original_price NUMERIC,
new_price NUMERIC,
percentage_discount NUMERIC,
description TEXT,
length JSON[],
image_link TEXT,
offer_expiration_date TIMESTAMP,
update_date TIMESTAMP,
load_date TIMESTAMP,
create_date TIMESTAMP
);


-- Creación del esquema
CREATE SCHEMA IF NOT EXISTS users_registration;

-- Creación de la tabla
CREATE TABLE IF NOT EXISTS users_registration.users_register (
id SERIAL,
first_name VARCHAR(25),
last_name VARCHAR(25),
email VARCHAR(80),
password VARCHAR,
user_type_id INTEGER,
create_date TIMESTAMP,
load_date TIMESTAMP
);

-- Creación del esquema
CREATE SCHEMA IF NOT EXISTS users;

-- Creación de la tabla
CREATE TABLE IF NOT EXISTS users.users (
id SERIAL,
user_id VARCHAR(70) PRIMARY KEY,
user_type_id INTEGER,
type_identification VARCHAR(10),
first_name VARCHAR(150),
last_name VARCHAR(150),
birthday_date TIMESTAMP,
identity_document VARCHAR(50),
country_phone_code_id INTEGER,
phone_number NUMERIC,
email VARCHAR(255),
confirm_email BOOLEAN DEFAULT FALSE,
image_link TEXT,
address JSON[],
update_date TIMESTAMP,
create_date TIMESTAMP
);


-- Creación del esquema
CREATE SCHEMA IF NOT EXISTS history_orders;

-- Creación de la tabla
CREATE TABLE IF NOT EXISTS history_orders.historical_orders (
id SERIAL PRIMARY KEY,
user_id VARCHAR(65),
orders_id VARCHAR(65),
created_date TIMESTAMP
);

-- Creación del esquema
CREATE SCHEMA IF NOT EXISTS orders;

-- Creación de la tabla
CREATE TABLE IF NOT EXISTS orders.orders (
id SERIAL ,
order_id VARCHAR(70) PRIMARY KEY,
user_id VARCHAR(70),
destination_address JSON[],
delivery_date TIMESTAMP,
status VARCHAR(150),
product_id VARCHAR(70),
update_date TIMESTAMP,
load_date TIMESTAMP,
create_date TIMESTAMP
);


-- Creación de las claves foráneas
ALTER TABLE history_orders.historical_orders
ADD CONSTRAINT fk_user_id
FOREIGN KEY (user_id)
REFERENCES users.users(user_id);

ALTER TABLE history_orders.historical_orders
ADD CONSTRAINT fk_orders_id
FOREIGN KEY (orders_id)
REFERENCES orders.orders(order_id);



-- Creación de las claves foráneas
ALTER TABLE orders.orders
ADD CONSTRAINT fk_user_id
FOREIGN KEY (user_id)
REFERENCES users.users(user_id);

ALTER TABLE orders.orders
ADD CONSTRAINT fk_product_id
FOREIGN KEY (product_id)
REFERENCES products.products(product_id);
